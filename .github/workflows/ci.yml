name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    name: Setup Environment
    outputs:
      poetry-cache-key: ${{ steps.cache-poetry.outputs.cache-hit }}
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Checkout OperationsGateway API
        uses: actions/checkout@v3

      - name: Install system dependencies for python-ldap
        run: |
          sudo apt-get update
          sudo apt-get install -y libsasl2-dev libldap2-dev libssl-dev

      - name: Install Poetry
        run: pip install poetry

      - name: Ensure Poetry Uses Python 3.11
          run: poetry env use python3.11

      - name: Install Nox
        run: pip install nox

      - name: Load Poetry cache
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-3.11-${{ hashFiles('poetry.lock') }}
          restore-keys: poetry-${{ runner.os }}-3.11-

      - name: Install dependencies
        run: poetry install --without simulated-data

  lint-format:
    runs-on: ubuntu-latest
    needs: setup
    name: Lint & Formatting
    steps:
      - name: Checkout OperationsGateway API
        uses: actions/checkout@v3

      - name: Load Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-3.11-${{ hashFiles('poetry.lock') }}

      - name: Run Black & Lint
        run: |
          nox -s black -- --check --diff
          nox -s lint

  safety:
    runs-on: ubuntu-latest
    needs: setup
    name: Dependency Safety
    steps:
      - name: Checkout OperationsGateway API
        uses: actions/checkout@v3

      - name: Load Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-3.11-${{ hashFiles('poetry.lock') }}

      - name: Run Safety Check
        run: nox -s safety
